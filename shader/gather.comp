#version 450

layout(local_size_x = 1024) in;

layout (set = 0, binding = 0) readonly buffer InputBuffer {
    uint inArray[];
};

layout (set = 0, binding = 1) buffer OutputBuffer {
    uint outArray[];
};

layout(set = 0, binding = 2) readonly buffer PrefixBuffer {
    uint[] prefixArray;
};

layout(set = 0, binding = 3) readonly buffer AlgorithmData{
    uint inputLenght;
    uint outputLength;
    uint elementSize;
};

void copy(uint from, uint to){
    uint outMemBase = to * elementSize;
    uint indexMemBase = from * elementSize;
    for (uint i = 0; i<elementSize; i++){
        outArray[outMemBase + i] = inArray[indexMemBase + i];
    }
}

void main() {
    uint global_xi = gl_GlobalInvocationID.x;

    if (prefixArray[global_xi] == prefixArray[global_xi+1]){
        copy(global_xi, global_xi - prefixArray[global_xi]);
    } else if (global_xi == gl_NumWorkGroups.x * 1024 -1){
        copy(global_xi, global_xi - prefixArray[global_xi]);
    }
}
